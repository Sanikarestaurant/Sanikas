AWSTemplateFormatVersion: '2010-09-09'
Description: 'Template to launch an EC2 t3.medium Ubuntu in existing VPC with 30GB, Security Group for SSH/HTTP/HTTPS, and an S3 bucket'
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: 'VPC ID for deployment'
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: 'Subnet ID for deployment'
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: 'Key pair name for EC2 access'
  ImageId:
    Type: AWS::EC2::Image::Id
    Default: 'ami-0ccbdfb001aa307a1'
    Description: 'Ubuntu AMI ID for your region'

Resources:
  # Security Group for EC2 Instance
  SanikaSgCombined:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Sanikas_SG for SSH, HTTP, and HTTPS"
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
          Description: "SSH access"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: "HTTP access"
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: "HTTPS access"
      Tags:
        - Key: Name
          Value: sanikasrestaurant-SG

  # EC2 Instance
  SanikaInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.medium
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref SanikaSgCombined
      KeyName: !Ref KeyName
      ImageId: !Ref ImageId
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 30
      Tags:
        - Key: Name
          Value: sanikasrestaurant

  # S3 Bucket
  SanikasRestaurantBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'sanikasrestaurant-${AWS::AccountId}-${AWS::Region}'
      Tags:
        - Key: Name
          Value: sanikasrestaurant-storage
